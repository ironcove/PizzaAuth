<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Auth0.ManagementApi</name>
    </assembly>
    <members>
        <member name="T:Auth0.ManagementApi.Clients.BlacklistedTokensClient">
            <summary>
            Contains all the methods to call the /blacklists/tokens endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BlacklistedTokensClient.#ctor(Auth0.Core.Http.IApiConnection)">
            <summary>
            Creates a new instance of the ClientBase class.
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection" /> which is used to communicate with the API.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BlacklistedTokensClient.GetAllAsync(System.String)">
            <summary>
            Gets all the blacklisted claims.
            </summary>
            <param name="aud">The aud claim for which you want to get blacklisted tokens. This is your API Key.</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.BlacklistedToken" /> objects.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BlacklistedTokensClient.CreateAsync(Auth0.ManagementApi.Models.BlacklistedTokenCreateRequest)">
            <summary>
            Blacklists a JWT token.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.BlacklistedTokenCreateRequest" /> containing the information of the token to blacklist.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.ClientBase">
            <summary>
            The base class from which all clients inherit. Give clients access to the underlying <see cref="T:Auth0.Core.Http.IApiConnection"/>.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Clients.ClientBase.Connection">
            <summary>
            The <see cref="T:Auth0.Core.Http.IApiConnection"/> which is used to make all API calls.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientBase.#ctor(Auth0.Core.Http.IApiConnection)">
            <summary>
            Creates a new instance of the ClientBase class.
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection"/> which is used to communicate with the API.</param>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.ClientGrantsClient">
            <summary>
            Contains all methods to work with Client Grants.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.#ctor(Auth0.Core.Http.ApiConnection)">
            <summary>
            Creates a new instance of the Client Grants client.
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection" /> which is used to communicate with the API.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.CreateAsync(Auth0.ManagementApi.Models.ClientGrantCreateRequest)">
            <summary>
            Creates a new Client Grant
            </summary>
            <param name="request">The request containing the properties of the Client Grant.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.ClientGrant"/></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.DeleteAsync(System.String)">
            <summary>
            Deletes a client grant.
            </summary>
            <param name="id">The identifier of the Client Grant to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.GetAllAsync(System.String)">
            <summary>
            Gets a list of all the client grants.
            </summary>
            <param name="audience">The audience according to which you want to filter the returned client grants.</param>
            <returns>A list of client grants</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ClientGrantUpdateRequest)">
            <summary>
            Updates a client grant
            </summary>
            <param name="id">The identifier of the client grant to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientGrantUpdateRequest"/> containing the properties to update.</param>
            <returns></returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.ClientsClient">
            <summary>
            Contains all the methods to call the /clients endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.#ctor(Auth0.Core.Http.IApiConnection)">
            <summary>
            Creates a new instance of the ClientBase class.
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection" /> which is used to communicate with the API.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.CreateAsync(Auth0.ManagementApi.Models.ClientCreateRequest)">
            <summary>
            Creates a new client application.
            </summary>
            <param name="request">The request containing the properties of the new client.</param>
            <returns>Task&lt;Core.Client&gt;.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.DeleteAsync(System.String)">
            <summary>
            Deletes a client and all its related assets (like rules, connections, etc) given its id.
            </summary>
            <param name="id">The id of the client to delete.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.GetAsync(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves a client by its id.
            </summary>
            <param name="id">The id of the client to retrieve</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on includeFields) from the
            result, empty to retrieve all fields</param>
            <param name="includeFields">true if the fields specified are to be included in the result, false otherwise (defaults to
            true)</param>
            <returns>Task&lt;Core.Client&gt;.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.GetAllAsync(System.String,System.Boolean)">
            <summary>
            Retrieves a list of all client applications. Accepts a list of fields to include or exclude.
            </summary>
            <param name="fields">A comma separated list of fields to include or exclude (depending on includeFields) from the
            result, empty to retrieve all fields</param>
            <param name="includeFields">true if the fields specified are to be included in the result, false otherwise (defaults to
            true)</param>
            <returns>Task&lt;IList&lt;Core.Client&gt;&gt;.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ClientUpdateRequest)">
            <summary>
            Updates a client application.
            </summary>
            <param name="id">The id of the client you want to update.</param>
            <param name="request">The request containing the properties of the client you want to update.</param>
            <returns>Task&lt;Core.Client&gt;.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.ConnectionsClient">
            <summary>
            Contains all the methods to call the /connections endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.#ctor(Auth0.Core.Http.IApiConnection)">
            <summary>
            Creates a new instance of the ClientBase class.
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection" /> which is used to communicate with the API.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.CreateAsync(Auth0.ManagementApi.Models.ConnectionCreateRequest)">
            <summary>
            Creates a new connection according to the request.
            </summary>
            <param name="request">The request containing the properties for the new connection.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Connection" /> containing the newly created Connection.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.DeleteAsync(System.String)">
            <summary>
            Deletes a connection and all its users.
            </summary>
            <param name="id">The id of the connection to delete.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.DeleteUserAsync(System.String,System.String)">
            <summary>
            Deletes a specified connection user by its email 
            </summary>
            <remarks>
            Currently only database connections are supported and you cannot delete all users from specific connection
            </remarks>
            <param name="id">The identifier of the connection</param>
            <param name="email">The email of the user to delete</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.GetAsync(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves a connection by its <paramref name="id" />
            </summary>
            <param name="id">The id of the connection to retrieve.</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be included in the result, false otherwise (defaults to true).</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Connection" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.GetAllAsync(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Retrieves every connection matching the specified strategy. All connections are retrieved if no strategy is being specified. Accepts a list of fields to include or exclude in the resulting list of connection objects.
            </summary>
            <param name="strategy">Provide a type of strategy to only retrieve connections with that strategy.</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be included in the result, false otherwise (defaults to true).</param>
            <param name="name">Provide the name of the connection to retrieve</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.Connection" /> objects matching the strategy.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ConnectionUpdateRequest)">
            <summary>
            Updates a connection.
            </summary>
            <param name="id">The id of the connection to update.</param>
            <param name="request">The request containing the properties of the connection you wish to update.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Connection" /> containing the updated connection.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.DeviceCredentialsClient">
            <summary>
            Contains all the methods to call the /device-credentials endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.DeviceCredentialsClient.#ctor(Auth0.Core.Http.ApiConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Clients.DeviceCredentialsClient"/> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.DeviceCredentialsClient.GetAllAsync(System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Gets a list of all the device credentials.
            </summary>
            <param name="fields">A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be excluded from the result, false otherwise (defaults to true).</param>
            <param name="userId">The user id of the devices to retrieve</param>
            <param name="clientId">The client id of the devices to retrieve.</param>
            <param name="type">The type of credentials</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.DeviceCredential" /> which conforms to the criteria specified.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.DeviceCredentialsClient.CreateAsync(Auth0.ManagementApi.Models.DeviceCredentialCreateRequest)">
            <summary>
            Creates a new device credential.
            </summary>
            <param name="request">The request containing the details of the device credential to create.</param>
            <returns>Tnew newly created <see cref="T:Auth0.ManagementApi.Models.DeviceCredential" /></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.DeviceCredentialsClient.DeleteAsync(System.String)">
            <summary>
            Deletes a device credential.
            </summary>
            <param name="id">The id of the device credential to delete</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.EmailProviderClient">
            <summary>
            Contains all the methods to call the /emails/provider endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailProviderClient.#ctor(Auth0.Core.Http.IApiConnection)">
            <summary>
            Creates a new instance of the ClientBase class.
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection" /> which is used to communicate with the API.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailProviderClient.ConfigureAsync(Auth0.ManagementApi.Models.EmailProviderConfigureRequest)">
            <summary>
            Configures the email provider.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.EmailProviderConfigureRequest" /> containing the configuration properties of the
            provider.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.EmailProvider" /> instance containing the email provider details.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailProviderClient.DeleteAsync">
            <summary>
            Deletes the email provider.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailProviderClient.GetAsync(System.String,System.Boolean)">
            <summary>
            Gets the email provider.
            </summary>
            <param name="fields">A comma separated list of fields to include or exclude (depending on
            <paramref name="includeFields" />) from the result, empty to retrieve: name, enabled, settings fields.</param>
            <param name="includeFields">True if the fields specified are to be excluded from the result, false otherwise (defaults
            to true).</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.EmailProvider" /> instance containing the email provider details.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailProviderClient.UpdateAsync(Auth0.ManagementApi.Models.EmailProviderUpdateRequest)">
            <summary>
            Updates the email provider.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.EmailProviderUpdateRequest" /> containing the configuration properties of the
            email provider.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.EmailProvider" /> instance containing the email provider details.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.IBlacklistedTokensClient">
            <summary>
            Contains all the methods to call the /blacklists/tokens endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IBlacklistedTokensClient.CreateAsync(Auth0.ManagementApi.Models.BlacklistedTokenCreateRequest)">
            <summary>
            Blacklists a JWY token.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.BlacklistedTokenCreateRequest"/> containing the information of the token to blacklist.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IBlacklistedTokensClient.GetAllAsync(System.String)">
            <summary>
            Gets all the blacklisted claims.
            </summary>
            <param name="aud">The aud claim for which you want to get blacklisted tokens. This is your API Key.</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.BlacklistedToken"/> objects.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.IClientGrantsClient">
            <summary>
            Contains all methods to work with Client Grants.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientGrantsClient.CreateAsync(Auth0.ManagementApi.Models.ClientGrantCreateRequest)">
            <summary>
            Creates a new Client Grant
            </summary>
            <param name="request">The request containing the properties of the Client Grant.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.ClientGrant"/></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientGrantsClient.DeleteAsync(System.String)">
            <summary>
            Deletes a client grant.
            </summary>
            <param name="id">The identifier of the Client Grant to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientGrantsClient.GetAllAsync(System.String)">
            <summary>
            Gets a list of all the client grants.
            </summary>
            <param name="audience">The audience according to which you want to filter the returned client grants.</param>
            <returns>A list of client grants</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientGrantsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ClientGrantUpdateRequest)">
            <summary>
            Updates a client grant
            </summary>
            <param name="id">The identifier of the client grant to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientGrantUpdateRequest"/> containing the properties to update.</param>
            <returns></returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.IClientsClient">
            <summary>
            Contains all the methods to call the /clients endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.CreateAsync(Auth0.ManagementApi.Models.ClientCreateRequest)">
            <summary>
                Creates a new client application.
            </summary>
            <param name="request">The request containing the properties of the new client.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.DeleteAsync(System.String)">
            <summary>
                Deletes a client and all its related assets (like rules, connections, etc) given its id.
            </summary>
            <param name="id">The id of the client to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.GetAllAsync(System.String,System.Boolean)">
            <summary>
                Retrieves a list of all client applications. Accepts a list of fields to include or exclude.
            </summary>
            <param name="fields">
                A comma separated list of fields to include or exclude (depending on includeFields) from the
                result, empty to retrieve all fields
            </param>
            <param name="includeFields">
                true if the fields specified are to be included in the result, false otherwise (defaults to
                true)
            </param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.GetAsync(System.String,System.String,System.Boolean)">
            <summary>
                Retrieves a client by its id.
            </summary>
            <param name="id">The id of the client to retrieve</param>
            <param name="fields">
                A comma separated list of fields to include or exclude (depending on includeFields) from the
                result, empty to retrieve all fields
            </param>
            <param name="includeFields">
                true if the fields specified are to be included in the result, false otherwise (defaults to
                true)
            </param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ClientUpdateRequest)">
            <summary>
                Updates a client application.
            </summary>
            <param name="id">The id of the client you want to update.</param>
            <param name="request">The request containing the properties of the client you want to update.</param>
            <returns></returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.IConnectionsClient">
            <summary>
            Contains all the methods to call the /connections endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.CreateAsync(Auth0.ManagementApi.Models.ConnectionCreateRequest)">
            <summary>
            Creates a new connection according to the request.
            </summary>
            <param name="request">The request containing the properties for the new connection.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Connection"/> containing the newly created Connection.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.DeleteAsync(System.String)">
            <summary>
            Deletes a connection and all its users.
            </summary>
            <param name="id">The id of the connection to delete.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.DeleteUserAsync(System.String,System.String)">
            <summary>
            Deletes a specified connection user by its email 
            </summary>
            <remarks>
            Currently only database connections are supported and you cannot delete all users from specific connection
            </remarks>
            <param name="id">The identifier of the connection</param>
            <param name="email">The email of the user to delete</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.GetAllAsync(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Retrieves every connection matching the specified strategy. All connections are retrieved if no strategy is being specified. Accepts a list of fields to include or exclude in the resulting list of connection objects.
            </summary>
            <param name="strategy">Provide a type of strategy to only retrieve connections with that strategy.</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be included in the result, false otherwise (defaults to true).</param>
            <param name="name">Provide the name of the connection to retrieve</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.Connection"/> objects matching the strategy.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.GetAsync(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves a connection by its <paramref name="id"/>
            </summary>
            <param name="id">The id of the connection to retrieve.</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be included in the result, false otherwise (defaults to true).</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Connection"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ConnectionUpdateRequest)">
            <summary>
            Updates a connection.
            </summary>
            <param name="id">The id of the connection to update.</param>
            <param name="request">The request containing the properties of the connection you wish to update.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Connection"/> containing the updated connection.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.IDeviceCredentialsClient">
            <summary>
            Contains all the methods to call the /device-credentials endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IDeviceCredentialsClient.CreateAsync(Auth0.ManagementApi.Models.DeviceCredentialCreateRequest)">
            <summary>
            Creates a new device credential.
            </summary>
            <param name="request">The request containing the details of the device credential to create.</param>
            <returns>Tnew newly created <see cref="T:Auth0.ManagementApi.Models.DeviceCredential"/></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IDeviceCredentialsClient.DeleteAsync(System.String)">
            <summary>
            Deletes a device credential.
            </summary>
            <param name="id">The id of the device credential to delete</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IDeviceCredentialsClient.GetAllAsync(System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Gets a list of all the device credentials.
            </summary>
            <param name="fields">A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be excluded from the result, false otherwise (defaults to true).</param>
            <param name="userId">The user id of the devices to retrieve</param>
            <param name="clientId">The client id of the devices to retrieve.</param>
            <param name="type">The type of credentials</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.DeviceCredential"/> which conforms to the criteria specified.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.IEmailProviderClient">
            <summary>
            Contains all the methods to call the /emails/provider endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IEmailProviderClient.ConfigureAsync(Auth0.ManagementApi.Models.EmailProviderConfigureRequest)">
            <summary>
                Configures the email provider.
            </summary>
            <param name="request">
                The <see cref="T:Auth0.ManagementApi.Models.EmailProviderConfigureRequest" /> containing the configuration properties of the
                provider.
            </param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.EmailProvider" /> instance containing the email provider details.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IEmailProviderClient.DeleteAsync">
            <summary>
                Deletes the email provider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IEmailProviderClient.GetAsync(System.String,System.Boolean)">
            <summary>
                Gets the email provider.
            </summary>
            <param name="fields">
                A comma separated list of fields to include or exclude (depending on
                <paramref name="includeFields" />) from the result, empty to retrieve: name, enabled, settings fields.
            </param>
            <param name="includeFields">
                True if the fields specified are to be excluded from the result, false otherwise (defaults
                to true).
            </param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.EmailProvider" /> instance containing the email provider details.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IEmailProviderClient.UpdateAsync(Auth0.ManagementApi.Models.EmailProviderUpdateRequest)">
            <summary>
                Updates the email provider.
            </summary>
            <param name="request">
                The <see cref="T:Auth0.ManagementApi.Models.EmailProviderUpdateRequest" /> containing the configuration properties of the
                email provider.
            </param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.EmailProvider" /> instance containing the email provider details.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.IJobsClient">
            <summary>
            Contains all the methods to call the /jobs endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IJobsClient.GetAsync(System.String)">
            <summary>
            Gets a job.
            </summary>
            <remarks>
            This is useful to check the status of a job.
            </remarks>
            <param name="id">The ID of the job to retrieve.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Job"/> instance containing the information about the job.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IJobsClient.ImportUsersAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.String)">
            <summary>
            Imports users to a connection from a file using a long running job. 
            </summary>
            <remarks>
            The documentation for the file format is <a href="https://auth0.com/docs/bulk-import">here</a>.
            </remarks>
            <param name="connectionId">The connection identifier.</param>
            <param name="fileName">Name of the file.</param>
            <param name="file">The file.</param>
            <param name="upsert">Update the user if already exists</param>
            <param name="externalId">Customer defined id</param>
            <returns>Task&lt;Job&gt;.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IJobsClient.SendVerificationEmailAsync(Auth0.ManagementApi.Models.VerifyEmailJobRequest)">
            <summary>
            Send an email to the specified user that asks them to click a link to verify their email address.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.VerifyEmailJobRequest"/> containing the information of the user whose email you want verified.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Job"/> instance containing the information about the job.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.ILogsClient">
            <summary>
            Contains all the methods to call the /logs endpoints
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ILogsClient.GetAllAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves log entries that match the specified search criteria
            </summary>
            <remarks>
            Will list all entries if no criteria is used. You can search with a criteria using the q parameter or you can search by a specific log ID (search by checkpoint)
            </remarks>
            <param name="page">The page number. Zero based</param>
            <param name="perPage">The amount of entries per page. Default: 50. Max value: 100</param>
            <param name="sort">The field to use for sorting. Use field:order where order is 1 for ascending and -1 for descending. For example date:-1</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields</param>
            <param name="includeFields">True if the fields specified are to be included in the result, false otherwise. Defaults to true</param>
            <param name="includeTotals">True if a query summary must be included in the result, false otherwise. Default false.</param>
            <param name="from">Log Event Id to start retrieving logs. You can limit the amount of logs using the take parameter.</param>
            <param name="take">The total amount of entries to retrieve when using the from parameter. Default: 50. Max value: 100</param>
            <param name="q">Query in Lucene query string syntax.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ILogsClient.GetAsync(System.String)">
            <summary>
            Retrieves the data related to the log entry identified by id. This returns a single log entry representation as specified in the schema.
            </summary>
            <param name="id">The identifier of the log entry to retrieve</param>
            <returns></returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.IResourceServersClient">
            <summary>
            Contains all the methods to call the /resource-server endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IResourceServersClient.CreateAsync(Auth0.ManagementApi.Models.ResourceServerCreateRequest)">
            <summary>
            Creates a new resource server
            </summary>
            <param name="request">Contains the information for the resource server to create</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IResourceServersClient.DeleteAsync(System.String)">
            <summary>
            Deletes a resource server
            </summary>
            <param name="id">The id of the resource server to delete</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IResourceServersClient.GetAsync(System.String)">
            <summary>
            Get a resource server by its id
            </summary>
            <param name="id">The id of the resource server</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.ResourceServer"/></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IResourceServersClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ResourceServerUpdateRequest)">
            <summary>
            Updates a resource server
            </summary>
            <param name="id">The id of the resource server to update</param>
            <param name="request">Contains the information for the resource server to update</param>
            <returns></returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.IRulesClient">
            <summary>
            Contains all the methods to call the /rules endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRulesClient.CreateAsync(Auth0.ManagementApi.Models.RuleCreateRequest)">
            <summary>
                Creates a new rule according to the request.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.RuleCreateRequest" /> containing the details of the rule to create.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Rule" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRulesClient.DeleteAsync(System.String)">
            <summary>
                Deletes a rule.
            </summary>
            <param name="id">The ID of the rule to delete.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRulesClient.GetAllAsync(System.Nullable{System.Boolean},System.String,System.Boolean,System.String)">
            <summary>
                Retrieves a list of all rules.
            </summary>
            <param name="enabled">If provided retrieves rules that match the value, otherwise all rules are retrieved.</param>
            <param name="fields">
                A comma separated list of fields to include or exclude (depending on
                <paramref name="includeFields" />) from the result, empty to retrieve all fields.
            </param>
            <param name="includeFields">
                True if the fields specified are to be included in the result, false otherwise (defaults to
                true).
            </param>
            <param name="stage">Retrieves rules that match the execution stage (defaults to login_success).</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.Rule" /> objects.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRulesClient.GetAsync(System.String,System.String,System.Boolean)">
            <summary>
                Retrieves a rule by its ID.
            </summary>
            <param name="id">The ID of the rule to retrieve.</param>
            <param name="fields">
                A comma separated list of fields to include or exclude (depending on
                <paramref name="includeFields" />) from the result, empty to retrieve all fields.
            </param>
            <param name="includeFields">
                True if the fields specified are to be included in the result, false otherwise (defaults to
                true).
            </param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Rule" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRulesClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.RuleUpdateRequest)">
            <summary>
                Updates a rule.
            </summary>
            <param name="id">The ID of the rule to update.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.RuleUpdateRequest" /> containing the information to update.</param>
            <returns></returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.IStatsClient">
            <summary>
            Contains all the methods to call the /stats endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IStatsClient.GetActiveUsersAsync">
            <summary>
                Gets the active users count (logged in during the last 30 days).
            </summary>
            <returns>The number of users.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IStatsClient.GetDailyStatsAsync(System.DateTime,System.DateTime)">
            <summary>
            Gets the daily stats for a particular period.
            </summary>
            <param name="from">The first day of the period (inclusive).</param>
            <param name="to">The last day of the period (inclusive).</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.DailyStatistics"/> containing the statistics for each day in the period.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.ITenantSettingsClient">
            <summary>
            Contains all the methods to call the /tenants/settings endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ITenantSettingsClient.GetAsync(System.String,System.Boolean)">
            <summary>
                Gets the settings for the tenant.
            </summary>
            <param name="fields">
                A comma separated list of fields to include or exclude (depending on includeFields) from the
                result, empty to retrieve all fields
            </param>
            <param name="includeFields">
                true if the fields specified are to be included in the result, false otherwise (defaults to
                true)
            </param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.TenantSettings" /> containing the settings for the tenant.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ITenantSettingsClient.UpdateAsync(Auth0.ManagementApi.Models.TenantSettingsUpdateRequest)">
            <summary>
                Updates the settings for the tenant.
            </summary>
            <param name="request">
                A <see cref="T:Auth0.ManagementApi.Models.TenantSettingsUpdateRequest" /> containing the settings for the tenant which are to
                be updated.
            </param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.TenantSettings" /> containing the updated settings for the tenant.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.ITicketsClient">
            <summary>
            Contains all the methods to call the /tickets endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ITicketsClient.CreateEmailVerificationTicketAsync(Auth0.ManagementApi.Models.EmailVerificationTicketRequest)">
            <summary>
            Creates an email verification ticket.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.EmailVerificationTicketRequest"/> containing the details of the ticket to create.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Ticket"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ITicketsClient.CreatePasswordChangeTicketAsync(Auth0.ManagementApi.Models.PasswordChangeTicketRequest)">
            <summary>
            Creates a password change ticket.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.PasswordChangeTicketRequest"/> containing the details of the ticket to create.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Ticket"/>.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.IUserBlocksClient">
            <summary>
            Contains all the methods for the /user-blocks endpoints
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUserBlocksClient.GetByIdentifierAsync(System.String)">
            <summary>
            Get a user's blocks by identifier.
            </summary>
            <param name="identifier">The identifier of the user. Can be a user's email address, username or phone number</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUserBlocksClient.GetByUserIdAsync(System.String)">
            <summary>
            Get a user's blocks by user id.
            </summary>
            <param name="id">The id of the user</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUserBlocksClient.UnblockByIdentifierAsync(System.String)">
            <summary>
            Unblock a user by their identifier.
            </summary>
            <param name="identifier">The identifier of the user. Can be a user's email address, username or phone number</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUserBlocksClient.UnblockByUserIdAsync(System.String)">
            <summary>
            Unblock a user by their id.
            </summary>
            <param name="id">The id of the user</param>
            <returns></returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.IUsersClient">
            <summary>
            Contains all the methods to call the /users endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.CreateAsync(Auth0.ManagementApi.Models.UserCreateRequest)">
            <summary>
                Creates a new user.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UserCreateRequest" /> containing the properties of the user to create.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.DeleteAllAsync">
            <summary>
                Deletes all users. Use with caution!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.DeleteAsync(System.String)">
            <summary>
                Deletes a user.
            </summary>
            <param name="id">The id of the user to delete.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.DeleteMultifactorProviderAsync(System.String,System.String)">
            <summary>
                Deletes a user's multifactor provider.
            </summary>
            <param name="id">The id of the user who multi factor provider to delete.</param>
            <param name="provider">The type of the multifactor provider. Supported values 'duo' or 'google-authenticator'</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetAllAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
                Lists or search for users based on criteria.
            </summary>
            <param name="page">The page number. Zero based.</param>
            <param name="perPage">The amount of entries per page.</param>
            <param name="includeTotals">True if a query summary must be included in the result.</param>
            <param name="sort">The field to use for sorting. 1 == ascending and -1 == descending</param>
            <param name="connection">Connection filter.</param>
            <param name="fields">
                A comma separated list of fields to include or exclude (depending on
                <paramref name="includeFields" />) from the result, empty to retrieve all fields.
            </param>
            <param name="includeFields">
                True if the fields specified are to be included in the result, false otherwise. Defaults to
                true.
            </param>
            <param name="q">
                Query in Lucene query string syntax. Only fields in app_metadata, user_metadata or the normalized user
                profile are searchable.
            </param>
            <param name="searchEngine">Use 'v2' if you want to try the new search engine, or 'v1' for the old search engine.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetAsync(System.String,System.String,System.Boolean)">
            <summary>
                Gets a user.
            </summary>
            <param name="id">The id of the user to retrieve.</param>
            <param name="fields">
                A comma separated list of fields to include or exclude (depending on includeFields) from the
                result, empty to retrieve all fields
            </param>
            <param name="includeFields">
                true if the fields specified are to be included in the result, false otherwise (defaults to
                true)
            </param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.User" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetLogsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Retrieve every log event for a specific user id
            </summary>
            <param name="userId">The user id of the logs to retrieve</param>
            <param name="page">The zero-based page number</param>
            <param name="perPage">The amount of entries per page. Default: 50. Max value: 100</param>
            <param name="sort">The field to use for sorting. Use field:order where order is 1 for ascending and -1 for descending. For example date:-1</param>
            <param name="includeTotals">True if a query summary must be included in the result, false otherwise. Default false.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.LinkAccountAsync(System.String,Auth0.ManagementApi.Models.UserAccountLinkRequest)">
            <summary>
                Links a secondary account to a primary account.
            </summary>
            <param name="id">The ID of the primary account.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UserAccountLinkRequest" /> containing details of the secondary account to link.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.LinkAccountAsync(System.String,System.String,System.String)">
            <summary>
                Links a secondary account to a primary account.
            </summary>
            <param name="id">The ID of the primary account.</param>
            <param name="primaryJwtToken">The JWT of the primary account.</param>
            <param name="secondaryJwtToken">The JWT for the secondary account you wish to link.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.UnlinkAccountAsync(System.String,System.String,System.String)">
            <summary>
                Unlinks user accounts
            </summary>
            <param name="primaryUserId">The ID of the primary account.</param>
            <param name="provider">The type of the identity provider.</param>
            <param name="secondaryUserId">The ID for the secondary account</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.UserUpdateRequest)">
            <summary>
                Updates a user.
            </summary>
            <param name="id">The id of the user to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UserUpdateRequest" /> containing the information you wish to update.</param>
            <returns></returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.JobsClient">
            <summary>
            Contains all the methods to call the /jobs endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.JobsClient.#ctor(Auth0.Core.Http.IApiConnection)">
            <summary>
            Creates a new instance of the ClientBase class.
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection" /> which is used to communicate with the API.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.JobsClient.GetAsync(System.String)">
            <summary>
            Gets a job.
            </summary>
            <param name="id">The ID of the job to retrieve.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Job" /> instance containing the information about the job.</returns>
            <remarks>This is useful to check the status of a job.</remarks>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.JobsClient.ImportUsersAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.String)">
            <summary>
            Imports users to a connection from a file using a long running job.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="fileName">Name of the file.</param>
            <param name="file">The file.</param>
            <param name="upsert">Update the user if already exists</param>
            <param name="externalId">Customer defined id</param>
            <returns>Task&lt;Job&gt;.</returns>
            <remarks>The documentation for the file format is <a href="https://auth0.com/docs/bulk-import">here</a>.</remarks>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.JobsClient.SendVerificationEmailAsync(Auth0.ManagementApi.Models.VerifyEmailJobRequest)">
            <summary>
            Send an email to the specified user that asks them to click a link to verify their email address.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.VerifyEmailJobRequest" /> containing the information of the user whose email you want verified.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Job" /> instance containing the information about the job.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.LogsClient">
            <summary>
            Contains all the methods to call the /logs endpoints
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.LogsClient.#ctor(Auth0.Core.Http.IApiConnection)">
            <summary>
            Creates a new instance on <see cref="T:Auth0.ManagementApi.Clients.LogsClient"/>
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection"/> which is used to communicate with the API.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.LogsClient.GetAllAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves log entries that match the specified search criteria
            </summary>
            <remarks>
            Will list all entries if no criteria is used. You can search with a criteria using the q parameter or you can search by a specific log ID (search by checkpoint)
            </remarks>
            <param name="page">The page number. Zero based</param>
            <param name="perPage">The amount of entries per page. Default: 50. Max value: 100</param>
            <param name="sort">The field to use for sorting. Use field:order where order is 1 for ascending and -1 for descending. For example date:-1</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields</param>
            <param name="includeFields">True if the fields specified are to be included in the result, false otherwise. Defaults to true</param>
            <param name="includeTotals">True if a query summary must be included in the result, false otherwise. Default false.</param>
            <param name="from">Log Event Id to start retrieving logs. You can limit the amount of logs using the take parameter.</param>
            <param name="take">The total amount of entries to retrieve when using the from parameter. Default: 50. Max value: 100</param>
            <param name="q">Query in Lucene query string syntax.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.LogsClient.GetAsync(System.String)">
            <summary>
            Retrieves the data related to the log entry identified by id. This returns a single log entry representation as specified in the schema.
            </summary>
            <param name="id">The identifier of the log entry to retrieve</param>
            <returns></returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.ResourceServersClient">
            <summary>
            Contains all the methods to call the /resource-server endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ResourceServersClient.#ctor(Auth0.Core.Http.IApiConnection)">
            <summary>
            Creates a new instance of the resource servers client.
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection" /> which is used to communicate with the API.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ResourceServersClient.CreateAsync(Auth0.ManagementApi.Models.ResourceServerCreateRequest)">
            <summary>
            Creates a new resource server
            </summary>
            <param name="request">Contains the information for the resource server to create</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ResourceServersClient.DeleteAsync(System.String)">
            <summary>
            Deletes a resource server
            </summary>
            <param name="id">The id of the resource server to delete</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ResourceServersClient.GetAsync(System.String)">
            <summary>
            Get a resource server by its id
            </summary>
            <param name="id">The id of the resource server</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.ResourceServer"/></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ResourceServersClient.GetAllAsync">
            <summary>
            Get all resource servers
            </summary>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.ResourceServer"/></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ResourceServersClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ResourceServerUpdateRequest)">
            <summary>
            Updates a resource server
            </summary>
            <param name="id">The id of the resource server to update</param>
            <param name="request">Contains the information for the resource server to update</param>
            <returns></returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.RulesClient">
            <summary>
            Contains all the methods to call the /rules endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesClient.#ctor(Auth0.Core.Http.ApiConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Clients.RulesClient"/> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesClient.CreateAsync(Auth0.ManagementApi.Models.RuleCreateRequest)">
            <summary>
            Creates a new rule according to the request.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.RuleCreateRequest" /> containing the details of the rule to create.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Rule" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesClient.DeleteAsync(System.String)">
            <summary>
            Deletes a rule.
            </summary>
            <param name="id">The ID of the rule to delete.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesClient.GetAllAsync(System.Nullable{System.Boolean},System.String,System.Boolean,System.String)">
            <summary>
            Retrieves a list of all rules.
            </summary>
            <param name="enabled">If provided retrieves rules that match the value, otherwise all rules are retrieved.</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on
            <paramref name="includeFields" />) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be included in the result, false otherwise (defaults to
            true).</param>
            <param name="stage">Retrieves rules that match the execution stage (defaults to login_success).</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.Rule" /> objects.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesClient.GetAsync(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves a rule by its ID.
            </summary>
            <param name="id">The ID of the rule to retrieve.</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on
            <paramref name="includeFields" />) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be included in the result, false otherwise (defaults to
            true).</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Rule" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.RuleUpdateRequest)">
            <summary>
            Updates a rule.
            </summary>
            <param name="id">The ID of the rule to update.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.RuleUpdateRequest" /> containing the information to update.</param>
            <returns>Task&lt;Rule&gt;.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.StatsClient">
            <summary>
            Contains all the methods to call the /stats endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.StatsClient.#ctor(Auth0.Core.Http.IApiConnection)">
            <summary>
            Creates a new instance of the ClientBase class.
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection" /> which is used to communicate with the API.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.StatsClient.GetActiveUsersAsync">
            <summary>
            Gets the active users count (logged in during the last 30 days).
            </summary>
            <returns>The number of users.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.StatsClient.GetDailyStatsAsync(System.DateTime,System.DateTime)">
            <summary>
            Gets the daily stats for a particular period.
            </summary>
            <param name="from">The first day of the period (inclusive).</param>
            <param name="to">The last day of the period (inclusive).</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.DailyStatistics" /> containing the statistics for each day in the period.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.TenantSettingsClient">
            <summary>
            Contains all the methods to call the /tenants/settings endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.TenantSettingsClient.#ctor(Auth0.Core.Http.IApiConnection)">
            <summary>
            Creates a new instance of the ClientBase class.
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection" /> which is used to communicate with the API.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.TenantSettingsClient.GetAsync(System.String,System.Boolean)">
            <summary>
            Gets the settings for the tenant.
            </summary>
            <param name="fields">A comma separated list of fields to include or exclude (depending on includeFields) from the
            result, empty to retrieve all fields</param>
            <param name="includeFields">true if the fields specified are to be included in the result, false otherwise (defaults to
            true)</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.TenantSettings" /> containing the settings for the tenant.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.TenantSettingsClient.UpdateAsync(Auth0.ManagementApi.Models.TenantSettingsUpdateRequest)">
            <summary>
            Updates the settings for the tenant.
            </summary>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.TenantSettingsUpdateRequest" /> containing the settings for the tenant which are to
            be updated.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.TenantSettings" /> containing the updated settings for the tenant.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.TicketsClient">
            <summary>
            Contains all the methods to call the /tickets endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.TicketsClient.#ctor(Auth0.Core.Http.IApiConnection)">
            <summary>
            Creates a new instance of the ClientBase class.
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection" /> which is used to communicate with the API.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.TicketsClient.CreateEmailVerificationTicketAsync(Auth0.ManagementApi.Models.EmailVerificationTicketRequest)">
            <summary>
            Creates an email verification ticket.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.EmailVerificationTicketRequest" /> containing the details of the ticket to create.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Ticket" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.TicketsClient.CreatePasswordChangeTicketAsync(Auth0.ManagementApi.Models.PasswordChangeTicketRequest)">
            <summary>
            Creates a password change ticket.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.PasswordChangeTicketRequest" /> containing the details of the ticket to create.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Ticket" />.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.UserBlocksClient">
            <summary>
            Contains all the methods for the /user-blocks endpoints
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UserBlocksClient.#ctor(Auth0.Core.Http.IApiConnection)">
            <summary>
            Creates a new instance of the user blocks client.
            </summary>
            <param name="connection">The <see cref="T:Auth0.Core.Http.IApiConnection" /> which is used to communicate with the API.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UserBlocksClient.GetByIdentifierAsync(System.String)">
            <summary>
            Get a user's blocks by identifier.
            </summary>
            <param name="identifier">The identifier of the user. Can be a user's email address, username or phone number</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UserBlocksClient.GetByUserIdAsync(System.String)">
            <summary>
            Get a user's blocks by user id.
            </summary>
            <param name="id">The id of the user</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UserBlocksClient.UnblockByIdentifierAsync(System.String)">
            <summary>
            Unblock a user by their identifier.
            </summary>
            <param name="identifier">The identifier of the user. Can be a user's email address, username or phone number</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UserBlocksClient.UnblockByUserIdAsync(System.String)">
            <summary>
            Unblock a user by their id.
            </summary>
            <param name="id">The id of the user</param>
            <returns></returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.UsersClient">
            <summary>
            Contains all the methods to call the /users endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.#ctor(Auth0.Core.Http.ApiConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Clients.UsersClient"/> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.CreateAsync(Auth0.ManagementApi.Models.UserCreateRequest)">
            <summary>
            Creates a new user.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UserCreateRequest" /> containing the properties of the user to create.</param>
            <returns>Task&lt;User&gt;.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.DeleteAllAsync">
            <summary>
            Deletes all users. Use with caution!
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.DeleteAsync(System.String)">
            <summary>
            Deletes a user.
            </summary>
            <param name="id">The id of the user to delete.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.DeleteMultifactorProviderAsync(System.String,System.String)">
            <summary>
                Deletes a user's multifactor provider.
            </summary>
            <param name="id">The id of the user who multi factor provider to delete.</param>
            <param name="provider">The type of the multifactor provider. Supported values 'duo' or 'google-authenticator'</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetAllAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Lists or search for users based on criteria.
            </summary>
            <param name="page">The page number. Zero based.</param>
            <param name="perPage">The amount of entries per page.</param>
            <param name="includeTotals">True if a query summary must be included in the result.</param>
            <param name="sort">The field to use for sorting. 1 == ascending and -1 == descending</param>
            <param name="connection">Connection filter.</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on
            <paramref name="includeFields" />) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be included in the result, false otherwise. Defaults to
            true.</param>
            <param name="q">Query in Lucene query string syntax. Only fields in app_metadata, user_metadata or the normalized user
            profile are searchable.</param>
            <param name="searchEngine">Use 'v2' if you want to try the new search engine, or 'v1' for the old search engine.</param>
            <returns>A <see cref="T:Auth0.Core.Collections.IPagedList`1"/> with the paged list of users.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetAsync(System.String,System.String,System.Boolean)">
            <summary>
            Gets a user.
            </summary>
            <param name="id">The id of the user to retrieve.</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on includeFields) from the
            result, empty to retrieve all fields</param>
            <param name="includeFields">true if the fields specified are to be included in the result, false otherwise (defaults to
            true)</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.User" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetLogsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Retrieve every log event for a specific user id
            </summary>
            <param name="userId">The user id of the logs to retrieve</param>
            <param name="page">The zero-based page number</param>
            <param name="perPage">The amount of entries per page. Default: 50. Max value: 100</param>
            <param name="sort">The field to use for sorting. Use field:order where order is 1 for ascending and -1 for descending. For example date:-1</param>
            <param name="includeTotals">True if a query summary must be included in the result, false otherwise. Default false.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.LinkAccountAsync(System.String,Auth0.ManagementApi.Models.UserAccountLinkRequest)">
            <summary>
            Links a secondary account to a primary account.
            </summary>
            <param name="id">The ID of the primary account.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UserAccountLinkRequest" /> containing details of the secondary account to link.</param>
            <returns>Task&lt;IList&lt;AccountLinkResponse&gt;&gt;.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.LinkAccountAsync(System.String,System.String,System.String)">
            <summary>
            Links a secondary account to a primary account.
            </summary>
            <param name="id">The ID of the primary account.</param>
            <param name="primaryJwtToken">The JWT of the primary account.</param>
            <param name="secondaryJwtToken">The JWT for the secondary account you wish to link.</param>
            <returns>Task&lt;IList&lt;AccountLinkResponse&gt;&gt;.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.UnlinkAccountAsync(System.String,System.String,System.String)">
            <summary>
            Unlinks user accounts
            </summary>
            <param name="primaryUserId">The ID of the primary account.</param>
            <param name="provider">The type of the identity provider.</param>
            <param name="secondaryUserId">The ID for the secondary account</param>
            <returns>Task&lt;IList&lt;AccountLinkResponse&gt;&gt;.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.UserUpdateRequest)">
            <summary>
            Updates a user.
            </summary>
            <param name="id">The id of the user to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UserUpdateRequest" /> containing the information you wish to update.</param>
            <returns>Task&lt;User&gt;.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.IManagementApiClient">
            <summary>
            Represents the Management API client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.BlacklistedTokens">
            <summary>
            Contains all the methods to call the /blacklists/tokens endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.ClientGrants">
            <summary>
            Contains all the methods to call the /client-grants endpoints
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Clients">
            <summary>
            Contains all the methods to call the /clients endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Connections">
            <summary>
            Contains all the methods to call the /connections endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.DeviceCredentials">
            <summary>
            Contains all the methods to call the /device-credentials endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.EmailProvider">
            <summary>
            Contains all the methods to call the /emails/provider endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Jobs">
            <summary>
            Contains all the methods to call the /jobs endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Logs">
            <summary>
            Contains a ll the methods to call the /logs endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.ResourceServers">
            <summary>
            Contains all the methods to call the /resource-servers endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Rules">
            <summary>
            Contains all the methods to call the /rules endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Stats">
            <summary>
            Contains all the methods to call the /stats endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.TenantSettings">
            <summary>
            Contains all the methods to call the /tenants/settings endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Tickets">
            <summary>
            Contains all the methods to call the /tickets endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.UserBlocks">
            <summary>
            Contains all the methods to call the /user-blocks endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Users">
            <summary>
            Contains all the methods to call the /users endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.IManagementApiClient.GetLastApiInfo">
            <summary>
            Gets information about the last API call;
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.ManagementApiClient">
            <summary>
            Represents the Management API client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.BlacklistedTokens">
            <summary>
            Contains all the methods to call the /blacklists/tokens endpoints.
            </summary>
            <value>The blacklisted tokens.</value>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.ClientGrants">
            <summary>
            Contains all the methods to call the /client-grants endpoints
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Clients">
            <summary>
            Contains all the methods to call the /clients endpoints.
            </summary>
            <value>The clients.</value>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Connections">
            <summary>
            Contains all the methods to call the /connections endpoints.
            </summary>
            <value>The connections.</value>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.DeviceCredentials">
            <summary>
            Contains all the methods to call the /device-credentials endpoints.
            </summary>
            <value>The device credentials.</value>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.EmailProvider">
            <summary>
            Contains all the methods to call the /emails/provider endpoints.
            </summary>
            <value>The email provider.</value>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Guardian">
            <summary>
            Contains all the methods to call the /guardian endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Jobs">
            <summary>
            Contains all the methods to call the /jobs endpoints.
            </summary>
            <value>The jobs.</value>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Logs">
            <summary>
            Contains all the methods to call the /logs endpoints.
            </summary>
            <value>The rules.</value>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.ResourceServers">
            <summary>
            Contains all the methods to call the /resource-servers endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Rules">
            <summary>
            Contains all the methods to call the /rules endpoints.
            </summary>
            <value>The rules.</value>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Stats">
            <summary>
            Contains all the methods to call the /stats endpoints.
            </summary>
            <value>The stats.</value>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.TenantSettings">
            <summary>
            Contains all the methods to call the /tenants/settings endpoints.
            </summary>
            <value>The tenant settings.</value>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Tickets">
            <summary>
            Contains all the methods to call the /tickets endpoints.
            </summary>
            <value>The tickets.</value>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.UserBlocks">
            <summary>
            Contains all the methods to call the /user-blocks endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Users">
            <summary>
            Contains all the methods to call the /users endpoints.
            </summary>
            <value>The users.</value>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.GetLastApiInfo">
            <summary>
            Gets information about the last API call;
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.#ctor(System.String,System.Uri,Auth0.Core.Http.DiagnosticsHeader,System.Net.Http.HttpMessageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.ManagementApiClient"/> class.
            </summary>
            <param name="token">The token.</param>
            <param name="baseUri">The base URI.</param>
            <param name="diagnostics">The diagnostics.</param>
            <param name="handler">The <see cref="T:System.Net.Http.HttpMessageHandler"/> which is used for HTTP requests</param>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.#ctor(System.String,System.Uri,Auth0.Core.Http.DiagnosticsHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.ManagementApiClient"/> class.
            </summary>
            <param name="token">The token.</param>
            <param name="baseUri">The base URI.</param>
            <param name="diagnostics">The diagnostics.</param>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.#ctor(System.String,System.Uri,System.Net.Http.HttpMessageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.ManagementApiClient"/> class.
            </summary>
            <param name="token">The token.</param>
            <param name="baseUri">The base URI.</param>
            <param name="handler">The <see cref="T:System.Net.Http.HttpMessageHandler"/> which is used for HTTP requests</param>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.ManagementApiClient"/> class.
            </summary>
            <param name="token">The token.</param>
            <param name="baseUri">The base URI.</param>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.#ctor(System.String,System.String,Auth0.Core.Http.DiagnosticsHeader,System.Net.Http.HttpMessageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.ManagementApiClient"/> class.
            </summary>
            <param name="token">The token.</param>
            <param name="domain">Your Auth0 domain, e.g. mydomain.auth0.com.</param>
            <param name="diagnostics">The diagnostics.</param>
            <param name="handler">The <see cref="T:System.Net.Http.HttpMessageHandler"/> which is used for HTTP requests</param>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.#ctor(System.String,System.String,Auth0.Core.Http.DiagnosticsHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.ManagementApiClient"/> class.
            </summary>
            <param name="token">The token.</param>
            <param name="domain">Your Auth0 domain, e.g. mydomain.auth0.com.</param>
            <param name="diagnostics">The diagnostics.</param>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.#ctor(System.String,System.String,System.Net.Http.HttpMessageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.ManagementApiClient"/> class.
            </summary>
            <param name="token">The token.</param>
            <param name="domain">Your Auth0 domain, e.g. mydomain.auth0.com.</param>
            <param name="handler">The <see cref="T:System.Net.Http.HttpMessageHandler"/> which is used for HTTP requests</param>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.ManagementApiClient"/> class.
            </summary>
            <param name="token">The token.</param>
            <param name="domain">Your Auth0 domain, e.g. mydomain.auth0.com.</param>
        </member>
        <member name="T:Auth0.ManagementApi.Models.AccountLinkResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponse.Connection">
            <summary>
            The name of the connection for the identity.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponse.IsSocial">
            <summary>
            Indicates whether this is a social connection.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponse.ProfileData">
            <summary>
            The profile data
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponse.Provider">
            <summary>
            The type of identity provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponse.UserId">
            <summary>
            The unique identifier for the user for the identity.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.AccountLinkResponseProfileData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponseProfileData.Email">
            <summary>
            The email address for the profile.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponseProfileData.EmailVerified">
            <summary>
            Indicates whether the <see cref="P:Auth0.ManagementApi.Models.AccountLinkResponseProfileData.Email"/> is verified.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Addons">
            <summary>
            Addons are extensions associated with an Application in Auth0. Usually, they are 3rd party APIs used by the app that Auth0 generates access tokens for 
            (e.g. Salesforce, Azure Service Bus, Azure Mobile Services, SAP, etc).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.AmazonWebServices">
            <summary>
            Settings for Amazon Web Services Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.AzureMobileServices">
            <summary>
            Settings for Azure Mobile Services Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.AzureServiceBus">
            <summary>
            Settings for Azure Service Bus Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.Box">
            <summary>
            Settings for Box Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.CloudBees">
            <summary>
            Settings for CloudBees Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.Concur">
            <summary>
            Settings for Concur Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.DropBox">
            <summary>
            Settings for Dropbox Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.EchoSign">
            <summary>
            Settings for EchoSign Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.Egnyte">
            <summary>
            Settings for Egnyte Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.FireBase">
            <summary>
            Settings for Firebase Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.NewRelic">
            <summary>
            Settings for New Relic Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.Office365">
            <summary>
            Settings for Office 365 Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SalesForce">
            <summary>
            Settings for Salesforce Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SalesForceApi">
            <summary>
            Settings for Salesforce API Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SalesForceSandboxApi">
            <summary>
            Settings for Salesforce Sandbox API Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SamlP">
            <summary>
            Settings for SAML2 Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SapApi">
            <summary>
            Settings for SAP API Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SharePoint">
            <summary>
            Settings for Sharepoint Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SpringCM">
            <summary>
            Settings for SpringCM Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.WebApi">
            <summary>
            Settings for Web API Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.WsFed">
            <summary>
            Settings for WS-FED Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.Zendesk">
            <summary>
            Settings for Zendesk Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.Zoom">
            <summary>
            Settings for Zoom Addon
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.BlacklistedToken">
            <summary>
            Represents a blacklisted token.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.BlacklistedTokenBase">
            <summary>
            Base class for blacklisted tokens.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BlacklistedTokenBase.Aud">
            <summary>
            Gets or sets the JWT's aud claim. The Client identifier of the client for which it was issued.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BlacklistedTokenBase.Jti">
            <summary>
            Gets or sets the jti of the JWT to be blacklisted.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.BlacklistedTokenCreateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Client">
            <summary>
            Represents a client (App) in Auth0
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Client.ClientId">
            <summary>
            The id of the client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Client.SigningKeys">
            <summary>
            Client signing keys.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientApplicationType">
            <summary>
            The type of application for a <see cref="T:Auth0.ManagementApi.Models.Client"/>
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Native">
            <summary>
            Mobile or Desktop, apps that run natively in a device.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Spa">
            <summary>
            A JavaScript front-end app that uses an API.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.RegularWeb">
            <summary>
            Traditional web app (with refresh).
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.NonInteractive">
            <summary>
            CLI, Daemons or Services running on your backend.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientBase">
            <summary>
            Base class for clients.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.AddOns">
            <summary>
            Gets or sets the addons which are associated with the client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.AllowedClients">
            <summary>
            Ids of clients that will be allowed to perform delegation requests. Clients that will be allowed to make delegation request.
            </summary>
            <remarks>
            By default, all your clients will be allowed. This field allows you to specify specific clients.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.AllowedLogoutUrls">
            <summary>
            The URLs that Auth0 can redirect to after logout
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.AllowedOrigins">
            <summary>
            A set of URLs that represents valid origins for CORS.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.ApplicationType">
            <summary>
            The type of application this client represents
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.Callbacks">
            <summary>
            A set of URLs that are valid to call back from Auth0 when authenticating users.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.ClientAliases">
            <summary>
            List of audiences for SAML protocol.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.ClientMetaData">
            <summary>
            Metadata associated with this client
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.ClientSecret">
            <summary>
            The secret used to sign tokens for the client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.IsCustomLoginPageOn">
            <summary>
            True if the custom login page is to be used, false otherwise. Defaults to true.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.IsFirstParty">
            <summary>
            Whether this client a first party client or not
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.CustomLoginPage">
            <summary>
            The content (HTML, CSS, JS) of the custom login page.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.CustomLoginPagePreview">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.EncryptionKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.FormTemplate">
            <summary>
            Form template for WS-Federation protocol.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.JwtConfiguration">
            <summary>
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.Mobile">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.Name">
            <summary>
            The name of the client. Must contain at least one character. Does not allow '&lt;' or '&gt;'.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.ResourceServers">
            <summary>
            A list of resource servers (APIs) that the client is authorized to request access tokens for, using the Client Credentials exchange.
            </summary>
            <remarks>
            This is a legacy structure. If you want to grant Resource Server (API) access to clients, please use <see cref="P:Auth0.ManagementApi.ManagementApiClient.ClientGrants"/> instead.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.Sso">
            <summary>
            True to use Auth0 instead of the IdP to do Single Sign On, false otherwise.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.TokenEndpointAuthMethod">
            <summary>
            Defines the requested authentication method for the token endpoint.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientCreateRequest">
            <summary>
            Requests structure for creating a new client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientCreateRequest.IsHerokuApp">
            <summary>
            True if the client is a heroku application, false otherwise
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientGrant">
            <summary>
            Represents a Client Grant
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrant.Id">
            <summary>
            Gets or sets the identifier for a Client Grant.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientGrantBase">
            <summary>
            Base class for Client Grants
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrantBase.Audience">
            <summary>
            Gets or sets the audience
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrantBase.ClientId">
            <summary>
            Gets or sets the identifier of the <see cref="T:Auth0.ManagementApi.Models.Client"/>
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrantBase.Scope">
            <summary>
            Gets or sets the list of scopes
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientGrantCreateRequest">
            <summary>
            Request structure for creating a new Client Grant
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientGrantUpdateRequest">
            <summary>
            Request structure for updating a new Client Grant
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrantUpdateRequest.Scope">
            <summary>
            Gets or sets the list of scopes
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientResourceServerAssociation.Identifier">
            <summary>
            The resource server (API) identifier.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientResourceServerAssociation.Scopes">
            <summary>
            The scopes granted to the client to access the resource server.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientUpdateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Connection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Connection.Id">
            <summary>
            The connection's identifier
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Connection.Strategy">
            <summary>
            The type of the connection, related to the identity provider.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ConnectionBase">
            <summary>
            Base class for connections.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionBase.Name">
            <summary>
            The name of the connection.
            </summary>
            <remarks>
            Must start with an alphanumeric characters and can only contain alphanumeric characters and '-'. Max length 35.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionBase.Options">
            <summary>
            The options for the connection.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionBase.EnabledClients">
            <summary>
            The identifiers of the clients for which the connection is to be enabled. If the array is empty or the property is not specified, no clients are enabled.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ConnectionCreateRequest">
            <summary>
            Specified the properies for creating a new request.
            </summary>
            <remarks>
            At least the <see cref="P:Auth0.ManagementApi.Models.ConnectionBase.Name"/> and <see cref="P:Auth0.ManagementApi.Models.ConnectionCreateRequest.Strategy"/> properties are required.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionCreateRequest.Strategy">
            <summary>
            The identity provider identifier for the connection.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ConnectionUpdateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketRequest.EmailAddress">
            <summary>
                Alternate email to which the enrollment email will be sent. Optional - by default, the email will be sent to the
                user's default address
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketRequest.MustSendMail">
            <summary>
                Indicates whether an email must be sent to the user to start the enrollment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketRequest.UserId">
            <summary>
                The User ID for the enrollment ticket.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketResponse.TicketId">
            <summary>
                The ticket ID used to identify the enrollment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketResponse.TicketUrl">
            <summary>
                The URL you can use to start enrollment
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.DailyStatistics">
             <summary>
            vb
             </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DailyStatistics.Date">
            <summary>
            The date to which the stats belong.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DailyStatistics.Logins">
            <summary>
            The amount of logins on the date.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DailyStatistics.SignUps">
            <summary>
            The amount of signups on the date.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.DeviceCredential">
            <summary>
            Represents credentials for a device.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DeviceCredential.Id">
            <summary>
            Gets or sets the device's identifier.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.DeviceCredentialBase">
            <summary>
            Base class for device credentials.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DeviceCredentialBase.DeviceName">
            <summary>
            Gets or sets the device's name.
            </summary>
            <remarks>
            This is a value that must be easily recognized by the device's owner.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DeviceCredentialBase.DeviceId">
            <summary>
            Gets or sets a unique identifier for the device.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DeviceCredentialBase.Type">
            <summary>
            Gets or sets the type of the credential.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.DeviceCredentialCreateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DeviceCredentialCreateRequest.ClientId">
            <summary>
            Gets or sets the ID of the client for which the credential will be created.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DeviceCredentialCreateRequest.Value">
            <summary>
            Gets or sets the value of the credentia
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailProvider">
            <summary>
            Represents configuration for the email provider.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailProviderBase">
            <summary>
            Base class for email provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderBase.DefaultFromAddress">
            <summary>
            Gets or sets the default from address
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderBase.Name">
            <summary>
            Gets or sets the name of the provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderBase.IsEnabled">
            <summary>
            Gets or sets whether using your own email provider is enabled.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderBase.Credentials">
            <summary>
            Gets or sets the name of the email provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderBase.Settings">
            <summary>
            Gets or sets the settings of the email provider.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailProviderConfigureRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailProviderCredentials">
            <summary>
            Credentials for an email provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.ApiUser">
            <summary>
            Gets or sets the API User.
            </summary>
            <remarks>
            Applicable only to the SendGrid provider.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.ApiKey">
            <summary>
            Gets or sets the API Key.
            </summary>
            <remarks>
            Applicable only to the SendGrid  and Mandrill providers.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.AccessKeyId">
            <summary>
            Gets or sets the Access Key ID.
            </summary>
            <remarks>
            Applicable only to the AWS provider.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.SecretAccessKey">
            <summary>
            Gets or sets the Secret Access Key.
            </summary>
            <remarks>
            Applicable only to the AWS provider.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.Region">
            <summary>
            Gets or sets the default AWS region.
            </summary>
            <remarks>
            Applicable only to the AWS provider.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.SmtpHost">
            <summary>
            Gets or sets the host name or IP address of the SMTP server
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.SmtpPort">
            <summary>
            Gets or sets the port used by the SMTP server
            </summary>
            <remarks>
            Common ports include 25, 465, and 587. Please avoid using port 25 if you can, since many providers have limitations on this port.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.SmtpUsername">
            <summary>
            Gets or sets the username for the SMTP server
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.SmtpPassword">
            <summary>
            Gets or sets the password for the SMTP server
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailProviderUpdateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailVerificationTicketRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailVerificationTicketRequest.ResultUrl">
            <summary>
            The user will be redirected to this endpoint once the ticket is used.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailVerificationTicketRequest.UserId">
            <summary>
            The user ID for which the ticket is to be created.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EncryptionKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EncryptionKey.Certificate">
            <summary>
            Encryption certificate
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EncryptionKey.PublicKey">
            <summary>
            Encryption public key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EncryptionKey.Subject">
            <summary>
            The subject of the Enryption key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.EnrolledAt">
            <summary>
            Date and time when device was enrolled.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.Id">
            <summary>
            Enrollment generated ID.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.Identifier">
            <summary>
            Device identifier (usually phone identifier).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.LastAuth">
            <summary>
            Date and time when device was last used for authentication.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.Name">
            <summary>
            Name of the device which was enrolled.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.PhoneNumber">
            <summary>
            Phone Number.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.Status">
            <summary>
            Status of the enrollment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianFactor.Enabled">
            <summary>
            States if this factor is enabled.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianFactor.Name">
            <summary>
            The factor name.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianFactor.IsTrialExpired">
            <summary>
            For factors with trial limits (e.g. SMS) states if those limits have been exceed.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates.EnrollmentMessage">
            <summary>
            Message sent to the user when they are invited to enroll with a phone number.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates.VerificationMessage">
            <summary>
            Message sent to the user when they are prompted to verify their account.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianTwilioConfigurationBase.From">
            <summary>
            Number from which the message is sent.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianTwilioConfigurationBase.MessagingServiceSid">
            <summary>
            Copilot SID.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianTwilioConfigurationBase.AuthToken">
            <summary>
            Twilio Authentication token.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianTwilioConfigurationBase.Sid">
            <summary>
            Twilio SID.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Identity">
            <summary>
                Describes a 3rd party account for a given <see cref="T:Auth0.ManagementApi.Models.User" />.
            </summary>
            <remarks>
                A single <see cref="T:Auth0.ManagementApi.Models.User" /> may be linked to multiple 3rd party accounts. This object defines the details of one
                of those accounts.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.AccessToken">
            <summary>
                The token that can be used to call the <see cref="P:Auth0.ManagementApi.Models.Identity.Provider" />'s API to get more information about the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.Connection">
            <summary>
                The name of the connection for the identity.
            </summary>
            <remarks>
                Sometimes, this is the same as the connection, but not always.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.ExpiresIn">
            <summary>
                Gets or sets the expiry time in seconds.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.IsSocial">
            <summary>
                Indicates whether this is a social identity.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.ProfileData">
            <summary>
                Contains additional profile information for linked identities.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.Provider">
            <summary>
                The type of identity provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.RefreshToken">
            <summary>
                The refresh token that can be used to call the <see cref="P:Auth0.ManagementApi.Models.Identity.Provider" />'s API to renew access tokens.
            </summary>
            <remarks>
                The refresh token is only available for certain providers.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.UserId">
            <summary>
                The user's identifier.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Models.IGuardianClient.CreateEnrollmentTicketAsync(Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketRequest)">
            <summary>
                Generate an email with a link to start the Guardian enrollment process.
            </summary>
            <param name="request">
                The <see cref="T:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketRequest" /> containing the information about the
                user who should be enrolled.
            </param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketResponse" /> with the details of the ticket that was created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Models.IGuardianClient.DeleteEnrollmentAsync(System.String)">
            <summary>
                Deletes an enrollment.
            </summary>
            <param name="id">The ID of the enrollment.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Models.IGuardianClient.GetEnrollmentAsync(System.String)">
            <summary>
                Retrieves an enrollment.
            </summary>
            <param name="id">The ID of the enrollment.</param>
            <returns></returns>
        </member>
        <member name="M:Auth0.ManagementApi.Models.IGuardianClient.GetFactorsAsync">
            <summary>
                Retrieves all factors. Useful to check factor enablement and trial status.
            </summary>
            <returns>List of <see cref="T:Auth0.ManagementApi.Models.GuardianFactor" /> with the available factors.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Models.IGuardianClient.GetSmsTemplatesAsync">
            <summary>
                Retrieves enrollment and verification templates. You can use it to check the current values for your templates.
            </summary>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates" /> containing the templates.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Models.IGuardianClient.GetSnsConfigurationAsync">
            <summary>
                Returns provider configuration for AWS SNS
            </summary>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianSnsConfiguration" /> containing Amazon SNS configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Models.IGuardianClient.GetTwilioConfigurationAsync">
            <summary>
                Returns configuration for the Guardian Twilio provider.
            </summary>
            <returns><see cref="T:Auth0.ManagementApi.Models.GuardianTwilioConfiguration" /> with the Twilio configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Models.IGuardianClient.UpdateFactorAsync(Auth0.ManagementApi.Models.UpdateGuardianFactorRequest)">
            <summary>
                Enable or Disable a Guardian factor.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UpdateGuardianFactorRequest" /> containing the details of the factor to update.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.UpdateGuardianFactorResponse" /> indicating the status of the factor.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Models.IGuardianClient.UpdateSmsTemplatesAsync(Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates)">
            <summary>
                Updates enrollment and verification templates. Useful to send custom messages on SMS enrollment and verification.
            </summary>
            <param name="templates">A <see cref="T:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates" /> containing the updated templates.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates" /> containing the templates.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Models.IGuardianClient.UpdateSnsConfigurationAsync(Auth0.ManagementApi.Models.UpdateGuardianSnsConfigurationRequest)">
            <summary>
                Updates provider configuration for Amazon SNS.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UpdateGuardianSnsConfigurationRequest" /> containing Amazon SNS configuration.</param>
            <returns><see cref="T:Auth0.ManagementApi.Models.GuardianSnsConfiguration" /> with updated Amazon SNS configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Models.IGuardianClient.UpdateTwilioConfigurationAsync(Auth0.ManagementApi.Models.UpdateGuardianTwilioConfigurationRequest)">
            <summary>
                Configure the Guardian Twilio provider.
            </summary>
            <param name="request">
                The <see cref="T:Auth0.ManagementApi.Models.UpdateGuardianTwilioConfigurationRequest" /> containing the configuration
                settings.
            </param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.GuardianTwilioConfiguration" /> containing the updated configuration settings.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Job">
            <summary>
            Represents a background job.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.Status">
            <summary>
            The job's status.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.Type">
            <summary>
            The type of job.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.Id">
            <summary>
            The job's identifier. Useful to retrieve its status later on.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.Connection">
            <summary>
            The connection identifier of the connection to which users will be inserted.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.JwtConfiguration">
            <summary>
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.JwtConfiguration.IsSecretEncoded">
            <summary>
                True if the client secret is base64 encoded, false otherwise. Defaults to true.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.JwtConfiguration.LifetimeInSeconds">
            <summary>
                The amount of time (in seconds) that the token will be valid after being issued. (affects 'exp' claim)
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.JwtConfiguration.Scopes">
            <summary>
                The scopes for the JWT.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.JwtConfiguration.SigningAlgorithm">
            <summary>
                The algorithm used to sign the JsonWebToken. Possible values are 'HS256' or 'RS256'.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.LogEntry">
            <summary>
            Information about a log entry
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.Id">
            <summary>
            The unique identifier for the log entry
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.Date">
            <summary>
            The date when the event was created
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.Type">
            <summary>
            The log event type
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.ClientId">
            <summary>
            The identifier of the client
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.ClientName">
            <summary>
            The name of the client
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.IpAddress">
            <summary>
            The IP address of the log event source
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.LocationInfo">
            <summary>
            Additional details about the event's ip trace location. If the ip matches either as private or localhost it returns an empty object
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.Details">
            <summary>
            Additional (and very useful) details about the event.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.UserId">
            <summary>
            The user's unique identifier
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Mobile">
            <summary>
            Represents configuration of mobile apps for a client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Mobile.Android">
            <summary>
            Configuration related to Android native apps.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Mobile.Ios">
            <summary>
            Configuration related to iOS native apps
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Mobile.MobileAndroid">
            <summary>
            Represents Android configuration for a client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Mobile.MobileAndroid.AppPackageName">
            <summary>
            The package name which uniquely identifies the Android app.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Mobile.MobileAndroid.KeystoreHash">
            <summary>
            Gets or sets the keystore hash for an Android app.
            </summary>
            <value>The keystore hash.</value>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Mobile.MobileIos">
            <summary>
            Represents iOS configuration for a client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Mobile.MobileIos.AppBundleIdentifier">
            <summary>
            The Bundle identifier for the iOS app.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Mobile.MobileIos.TeamId">
            <summary>
            The iOS Developer Account Team identifier.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.PasswordChangeTicketRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.ResultUrl">
            <summary>
            The user will be redirected to this endpoint once the ticket is used.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.UserId">
            <summary>
            The user ID for which the ticket is to be created.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.NewPassword">
            <summary>
            The password to set for the user once the ticket is used.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.ConnectionId">
            <summary>
            The connection that provides the identity for which the password is to be changed. If sending this parameter, the <see cref="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.Email"/> is also required and the <see cref="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.UserId"/> is invalid.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.Email">
            <summary>
            The user's email.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ResourceServer">
            <summary>
            Represents a resource server
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServer.Id">
            <summary>
            The unique id of the resource server
            </summary>
            <remarks>
            Use this id to retrieve or delete a resource server
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServer.Identifier">
            <summary>
            The identifier of the resource server
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ResourceServerBase">
            <summary>
            Base class for resource server payloads
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.Name">
            <summary>
            The name of the resource server
            </summary>
            <remarks>
            Must contain at least one character. Does not allow '&lt;' or '&gt;'"
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.Scopes">
            <summary>
            The available scopes for the resource server
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.SigningAlgorithm">
            <summary>
            The algorithm used to sign tokens
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.SigningSecret">
            <summary>
            The secret used to sign tokens when using symmetric algorithms
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.TokenLifetime">
            <summary>
            The amount of time (in seconds) that the token will be valid after being issued
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.AllowOfflineAccess">
            <summary>
            Allows issuance of refresh tokens for this entity
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.SkipConsentForVerifiableFirstPartyClients">
            <summary>
            Flag this entity as capable of skipping consent
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ResourceServerCreateRequest">
            <summary>
            Request structure for creating a new resource server
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerCreateRequest.Identifier">
            <summary>
            The identifier of the resource server
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ResourceServerScope">
            <summary>
            Defines a scope for a resource server
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerScope.Value">
            <summary>
            The scope value
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerScope.Description">
            <summary>
            A user-friendly description of the scope
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ResourceServerUpdateRequest">
            <summary>
            Request structure for updating a resource server
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rule">
            <summary>
            Represents a rule. A rule is arbitrary JavaScript code that can be used to extend Auth0's default behavior when authenticating a user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rule.Id">
            <summary>
            Gets or sets the identifier for the rule.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rule.Stage">
            <summary>
            Gets or sets the execution stage of the rule.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RuleBase">
            <summary>
            Base class for rules.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RuleBase.Name">
            <summary>
            Gets or sets the name of the rule.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RuleBase.Enabled">
            <summary>
            Gets or sets whether the rule is enabled.        
            </summary>
            <remarks>
            True if the connection is enabled, false otherwise.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RuleBase.Script">
            <summary>
            Gets or sets the code to be executed when the rule runs.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RuleBase.Order">
            <summary>
            Gets or sets the order of the rule in relation to other rules. A rule with a lower order than another rule executes first.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RuleCreateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RuleCreateRequest.Stage">
            <summary>
            Gets or sets the execution stage of the rule.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.LoginRequest">
            <summary>
            Represents details of the Login request from the app to Auth0, including QueryString and User Location.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequest.Body">
            <summary>
            The body of the POST request on login transactions used on oauth2-resource-owner or wstrust-usernamemixed protocols.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequest.Geography">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequest.IpAddress">
            <summary>
            The originating IP address of the user trying to log in.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequest.Query">
            <summary>
            The QueryString of the login transaction sent by the application.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequest.UserAgent">
            <summary>
            The user-agent of the client that is trying to log in.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.LoginRequestGeography">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.ContinentCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.CountryCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.CountryName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.Latitude">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.Longitude">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.ShortCountryCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.TimeZone">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.LoginRequestQuery">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.ClientId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.Connection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.Prompt">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.RedirectUri">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.ResponseType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.RulesContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.ClientId">
            <summary>
            The client id of the application the user is logging in to.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.ClientName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.Connection">
            <summary>
            The name of the connection used to authenticate the user (e.g.: twitter or some-google-apps-domain)
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.ConnectionStrategy">
            <summary>
            The type of connection. 
            </summary>
            <remarks>
            For social connection connectionStrategy === connection. For enterprise connections, the strategy will be waad (Windows Azure AD), 
            ad (Active Directory/LDAP), auth0 (database connections), etc.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.JwtConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.Protocol">
            <summary>
            The authentication protocol. 
            </summary>
            <remarks>
            Possible values: oidc-basic-profile (most used, web based login), oidc-implicit-profile (used on mobile devices and single page apps), 
            oauth2-resource-owner (user/password login typically used on database connections), samlp (SAML protocol used on SaaS apps), 
            wsfed (WS-Federation used on Microsoft products like Office365), wstrust-usernamemixed (WS-trust user/password login used on CRM and Office365), 
            and delegation (when calling the Delegation endpoint).
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.LoginRequest">
            <summary>
            An object containing useful information of the request.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.SamlConfiguration">
            <summary>
            An object that controls the behavior of the SAML and WS-Fed endpoints. Useful for advanced claims mapping and token enrichment (only available for samlp and wsfed protocol).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.SingleSignOn">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.Stats">
            <summary>
            An object containing specific user stats, like stats.loginsCount.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.RulesContextSsoConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContextSsoConfiguration.CurrentClients">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContextSsoConfiguration.WithAuth0">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContextSsoConfiguration.WithDatabaseConnection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.RulesContextStats">
            <summary>
            An object containing specific user stats.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContextStats.LoginCount">
            <summary>
            The number of times the User has logged in.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.RulesRequest">
            <summary>
            Represents the root object POSTed from the Rules Engine, if you follow the example.
            </summary>
            <example>
            //Add this to your Node.js Rule. Be sure to replace the secret token with a different value.
            request.post({
              url: 'http://YourWebApiEndpoint',
              json: {
                user: user,
                context: context,
                secret_token: "SOMESECRETTOKEN",
              },
              timeout: 15000
            }, function(err, response, body){
              user.persistent.your_variable = body.your_variable;
              callback(null, user, context);
            });
            </example>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesRequest.User">
            <summary>
             The user object as it comes from the identity provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesRequest.Context">
            <summary>
            An object containing contextual information of the current authentication transaction.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesRequest.SecretToken">
            <summary>
            A random string you specify to make sure the request is coming from your Auth0 Rule.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RuleUpdateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ScopeEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ScopeEntry.Actions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Scopes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Scopes.Users">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Scopes.UsersAppMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Scopes.Clients">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Scopes.ClientKeys">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Scopes.Tokens">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Scopes.Stats">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.SigningKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.SigningKey.Cert">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.SigningKey.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.SigningKey.Pkcs7">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantErrorPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantErrorPage.Html">
            <summary>
            Replace default error page with a custom HTML (Liquid syntax is supported).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantErrorPage.ShowLogLink">
            <summary>
            True to show link to log as part of the default error page, false otherwise (default: true).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantErrorPage.Url">
            <summary>
            Redirect to specified url instead of show the default error page.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantSettings">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantSettingsBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.ErrorPage">
            <summary>
            An <see cref="T:Auth0.ManagementApi.Models.TenantErrorPage"/> object containing the settings for the error page.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.FriendlyName">
            <summary>
            The friendly name of the tenant.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.PictureUrl">
            <summary>
            The URL of the tenant logo (recommended size: 150x150).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.SupportEmail">
            <summary>
            User support email.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.SupportUrl">
            <summary>
            User support URL.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.DefaultDirectory">
            <summary>
            Gets or sets the default connection for "password" grant types.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantSettingsUpdateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Ticket">
            <summary>
            Represents a ticket. Tickets can be for either email verification or a password change.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Ticket.Value">
            <summary>
            The URL that represents the ticket.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TokenEndpointAuthMethod">
            <summary>
            Authentication method for the token endpoint
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.TokenEndpointAuthMethod.None">
            <summary>
            Public client without a client secret)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.TokenEndpointAuthMethod.ClientSecretPost">
            <summary>
            Client uses HTTP POST parameters
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.TokenEndpointAuthMethod.ClientSecretBasic">
            <summary>
            Client uses HTTP Basic
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UpdateGuardianFactorBase.IsEnabled">
            <summary>
            States if this factor is enabled
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UpdateGuardianFactorRequest.Factor">
            <summary>
            The Guardian factor to update.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.User">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.CreatedAt">
            <summary>
            Gets or sets the date the user was created.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.Identities">
            <summary>
            An array of objects with information about the user's identities. More than one will exists in case accounts are linked
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.LastIpAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.LastLogin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.Locale">
            <summary>
            
            </summary>
            <remarks>
            Returned for the Facebook, Google, and Microsoft social providers.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.LoginsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.PhoneVerified">
            <summary>
            Gets or sets whether the user's phone number is verified.
            </summary>
            <remarks>
            True if the phone is verified, otherwise false.
            
            This is only valid for users from SMS connections.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.UpdatedAt">
            <summary>
            Gets or sets the date the user was last updated (modified).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.UserId">
            <summary>
            A unique identifier of the user per identity provider, same for all apps (e.g.: google-oauth2|103547991597142817347). ALWAYS GENERATED
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.Blocked">
            <summary>
            Gets or sets whether the user is blocked. True if the user is blocked, otherwise false.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.ProviderAttributes">
            <summary>
            Contains a lists of all the extra provider specific user attributes over and above those contained in the <a href="https://auth0.com/docs/user-profile/normalized">normalized user profile</a>.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.Multifactor">
            <summary>
            Multifactor settings.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.NickName">
            <summary>
            The Nickname of the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.FirstName">
            <summary>
            The first name of the user (if available).
            </summary>
            <remarks>
            This is the given_name attribute supplied by the underlying API.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.FullName">
            <summary>
            The full name of the user (e.g.: John Foo). ALWAYS GENERATED.
            </summary>
            <remarks>
            This is the name attribute supplied by the underlying API.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.LastName">
            <summary>
            The last name of the user (if available).
            </summary>
            <remarks>
            This is the family_name attribute supplied by the underlying API.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.Picture">
            <summary>
            URL pointing to the user picture (if not available, will use gravatar.com with the email). ALWAYS GENERATED
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserAccountJwtLinkRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserAccountJwtLinkRequest.LinkWith">
            <summary>
            Gets or sets the JWT of the secondary account being linked.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserAccountLinkRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserAccountLinkRequest.Provider">
            <summary>
            Gets or sets the type of identity provider of the secondary account being linked.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserAccountLinkRequest.ConnectionId">
            <summary>
            Gets or sets the identifier of the connection of the secondary account being linked.
            </summary>
            <remarks>
             This is optional and may be useful in the case of having more than a database connection for the 'auth0' provider.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserAccountLinkRequest.UserId">
            <summary>
            Gets or sets the user's identitifer of the secondary account being linked.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserBase">
            <summary>
            Contains common elements used for both constructing <see cref="T:Auth0.ManagementApi.Models.User"/>-related requests, and comprising <see cref="T:Auth0.ManagementApi.Models.User"/>-related responses.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.AppMetadata">
            <summary>
            Contains user meta data. The user has read-only access to this.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.Email">
            <summary>
            Gets or sets the user's email address.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.EmailVerified">
            <summary>
            Gets or sets whether the user's email address is verified.
            </summary>
            <remarks>
            True if the email address is verified, otherwise false.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.PhoneNumber">
            <summary>
            Gets or sets the user's phone number.
            </summary>
            <remarks>
            This is only valid for users from SMS connections.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.UserMetadata">
            <summary>
            Contains user meta data. The user has read/write access to this.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.UserName">
            <summary>
            Gets or sets the user' username.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserBlock">
            <summary>
            Represents a user block
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBlock.Identifier">
            <summary>
            The identifier of the user
            </summary>
            <remarks>
            Can be the user's email address, username or phone number
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBlock.IpAddress">
            <summary>
            The blocked IP address
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserBlocks">
            <summary>
            Contains a list of blocks for a user
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBlocks.BlockedFor">
            <summary>
            An array of the blocks for the user
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserCreateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.Connection">
            <summary>
            Gets or sets the connection the user belongs to.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.UserId">
            <summary>
            Gets or sets the (optional) id of the user
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.Password">
            <summary>
            Gets or sets the user's password. This is mandatory on non-SMS connections.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.NickName">
            <summary>
            The Nickname of the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.FirstName">
            <summary>
            The first name of the user (if available).
            </summary>
            <remarks>
            This is the given_name attribute supplied by the underlying API.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.FullName">
            <summary>
            The full name of the user (e.g.: John Foo). ALWAYS GENERATED.
            </summary>
            <remarks>
            This is the name attribute supplied by the underlying API.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.LastName">
            <summary>
            The last name of the user (if available).
            </summary>
            <remarks>
            This is the family_name attribute supplied by the underlying API.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.Picture">
            <summary>
            URL pointing to the user picture (if not available, will use gravatar.com with the email). ALWAYS GENERATED
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.VerifyEmail">
            <summary>
            Gets or sets whether the user's email change must be verified. True if it must be verified, otherwise false.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserUpdateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.Connection">
            <summary>
            Gets or sets the connection the user belongs to.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.Password">
            <summary>
            Gets or sets the user's password. This is mandatory on non-SMS connections.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.PhoneVerified">
            <summary>
            Gets or sets whether the user's phone is verified.
            </summary>
            <remarks>
            True if the phone is verified, otherwise false.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.VerifyEmail">
            <summary>
            Gets or sets whether the user's email change must be verified. True if it must be verified, otherwise false.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.VerifyPassword">
            <summary>
            Gets or sets whether the user's password change needs to be verified via email. True if it must be verified, otherwise false.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.VerifyPhoneNumber">
            <summary>
            Gets or sets whether the user's phone number change needs to be verified via email. True if it must be verified, otherwise false.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.ClientId">
            <summary>
            Gets or sets the Auth0 clientID. Only useful when updating the email.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.Blocked">
            <summary>
            Gets or sets whether the user is blocked. True if the user is blocked, otherwise false.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.NickName">
            <summary>
            The Nickname of the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.FirstName">
            <summary>
            The first name of the user (if available).
            </summary>
            <remarks>
            This is the given_name attribute supplied by the underlying API.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.FullName">
            <summary>
            The full name of the user (e.g.: John Foo). ALWAYS GENERATED.
            </summary>
            <remarks>
            This is the name attribute supplied by the underlying API.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.LastName">
            <summary>
            The last name of the user (if available).
            </summary>
            <remarks>
            This is the family_name attribute supplied by the underlying API.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.Picture">
            <summary>
            URL pointing to the user picture (if not available, will use gravatar.com with the email). ALWAYS GENERATED
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.VerifyEmailJobRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.VerifyEmailJobRequest.UserId">
            <summary>
            The identifier of the user to whom the email will be sent.
            </summary>
        </member>
    </members>
</doc>
